services:
  go-dev:
    image: golang:1.23.1-alpine3.20
    volumes:
      - ./backend:/app
    working_dir: /app

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - questdb
    environment:
      KAFKA_BROKERS: kafka:9092
      QUESTDB_URL: questdb:9000

  frontend:
    image: node:alpine
    ports:
      - "3000:3000"
    working_dir: /app
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    entrypoint: ['npm', 'run', 'dev']

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper #persist zookeeper data
    

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: -1              # Infinite retention
      KAFKA_LOG_RETENTION_BYTES: -1              # No size limit for retention
    volumes:
      - kafka_data:/var/lib/kafka
    

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:7.4.0
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:29092"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
    

  questdb:
    image: questdb/questdb:latest
    container_name: questdb
    ports:
      - "9000:9000"  # HTTP port      
    environment:      
      - QUESTDB_WAL_ENABLED=true  # Enable WAL
    volumes:
      - questdb_data:/var/lib/questdb
       
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  questdb_data:
    driver: local

